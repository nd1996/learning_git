All About fucking git

// to add remote
git add remote <remote_name> <git respo url>

//Install git on local system 
git init // Initialize Git

// check remote respo connetivity
git remote
git remote -v //all respo with url get use in pull and push

// git basic
git add . // Get everything ready to commit

git add <file_name> or <folder_name> // Get custom file ready to commit

git commit -m "Message" // to commit changes

git commit -m "Title" -m "Description..." // with title and description

git commit -am "Message" // add and commit with single command

git rm <file_name> // this will remove custom file

// Unrelated history -- ISSUE
git pull --allow-unrelated-histories

// to push forcefully
// The current branch master has no upstream branch
git push --set-upstream nilesh master

// to remove set-upstream we ca set upstream
git push -u <remote_name> <remote_branch>
eg. git push -u nilesh master

// If you want to remove those file with track by Add and commit 
1. .gitignore  // ignores just files that weren't tracked before
2. git reset name_of_file  // to remove track 
3. git rm --cached name_of_file  // remove completely from repository

//Check commit list or History using log
git log -10 // this will only show the 10 most recent commits.
git log --oneline // this is a great way to view commit history by displaying the first seven characters of the SHA-1 hash and commit message of the commits on the current branch.
git log --oneline --graph // this will presents commit history in a ASCII graph displaying the different branches in the repository and their commits.
git log --oneline --graph --decorate // this will displays the same ASCII graph that is displayed using the --graph modifier, but also includes the branch name(s) for the different commits being displayed.
